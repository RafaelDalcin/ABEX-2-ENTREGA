let DataTypes,sequelize,Aluno;_668‍.x([["default",()=>_668‍.o]]);_668‍.w("sequelize",[["DataTypes",["DataTypes"],function(v){DataTypes=v}]]);_668‍.w("../config",[["sequelize",["sequelize"],function(v){sequelize=v}]]);_668‍.w("./Aluno",[["default",["Aluno"],function(v){Aluno=v}]]);



const Usuario = _668‍.a("sequelize",sequelize).define(
  'usuario',
  {
    id: {
      type: _668‍.a("DataTypes",DataTypes).INTEGER,
      primaryKey: true,
      autoIncrement: true
    },
    username: {
      type: _668‍.a("DataTypes",DataTypes).STRING(50),
      allowNull: false,
      unique: true
    },
    email: {
      type: _668‍.a("DataTypes",DataTypes).STRING(100)
    },
    passwordHash: {
      type: _668‍.a("DataTypes",DataTypes).STRING,
      allowNull: false,
      field: 'password_hash'
    },
    tipo: {
        type: _668‍.a("DataTypes",DataTypes).STRING(15),
        allowNull: false,
    },
  },
  {
    freezeTableName: true,
    timestamps: true,
    createdAt: 'created_at',
    updatedAt: 'updated_at'
  }
);

Usuario.hasOne(_668‍.a("Aluno",Aluno), { 
  as: 'aluno', 
  onDelete: 'NO ACTION',
  onUpdate: 'NO ACTION',
  foreignKey: {
    name: 'idAluno',
    field: 'id_aluno',
    allowNull: false
  }
});




_668‍.d(Usuario);_668‍.j(["default"]);