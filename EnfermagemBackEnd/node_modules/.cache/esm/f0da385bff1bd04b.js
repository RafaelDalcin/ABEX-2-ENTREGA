let DataTypes,sequelize,Grupo,Usuario;_ff1‍.x([["default",()=>_ff1‍.o]]);_ff1‍.w("sequelize",[["DataTypes",["DataTypes"],function(v){DataTypes=v}]]);_ff1‍.w("../config",[["sequelize",["sequelize"],function(v){sequelize=v}]]);_ff1‍.w("./Grupo",[["default",["Grupo"],function(v){Grupo=v}]]);_ff1‍.w("./Usuario",[["default",["Usuario"],function(v){Usuario=v}]]);




const Aluno = _ff1‍.a("sequelize",sequelize).define(
  'aluno',
  {
    id: {
      type: _ff1‍.a("DataTypes",DataTypes).INTEGER,
      primaryKey: true,
      autoIncrement: true
    },
    nome: {
      type: _ff1‍.a("DataTypes",DataTypes).STRING(100),
      allowNull: false
    },
    matricula: {
      type: _ff1‍.a("DataTypes",DataTypes).STRING(20),
      allowNull: false,
      unique: true,
    },
  },
  {
    freezeTableName: true,
    timestamps: true,
    createdAt: 'created_at',
    updatedAt: 'updated_at'
  }
);

Aluno.belongsTo(_ff1‍.a("Grupo",Grupo), { 
    as: 'grupo', 
    onDelete: 'NO ACTION',
    onUpdate: 'NO ACTION',
    foreignKey: {
      name: 'idGrupo',
      field: 'id_grupo',
      allowNull: false
    }
  });

  Aluno.belongsTo(_ff1‍.a("Usuario",Usuario), { 
    as: 'usuario', 
    onDelete: 'NO ACTION',
    onUpdate: 'NO ACTION',
    foreignKey: {
      name: 'idUsuario',
      field: 'id_user',
      allowNull: false
    }
  });




_ff1‍.d(Aluno);_ff1‍.j(["default"]);